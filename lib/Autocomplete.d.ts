import AttributeValues from "./AttributeValues";
import Client, { Suggestion } from 'getaddress-api';
export default class Autocomplete {
    readonly client: Client;
    readonly attributeValues: AttributeValues;
    private filterTimer;
    private blurTimer;
    private selectedIndex;
    private showAllClicked;
    private documentClick;
    private readonly input;
    private readonly list;
    private readonly container;
    constructor(inputElement: HTMLInputElement, client: Client, attributeValues: AttributeValues);
    destroy(): void;
    private onInputFocus;
    private onInputPaste;
    private onContainerKeyUp;
    private onContainerKeyDown;
    private onContainerFocusOut;
    private build;
    private onListClick;
    private onListMouseEnter;
    private debug;
    keyDownHandler: (event: KeyboardEvent) => void;
    handlePageUpKey: (event: KeyboardEvent) => void;
    handlePageDownKey: (event: KeyboardEvent) => void;
    handleHomeKey: (event: KeyboardEvent) => void;
    handleComponentBlur: (event: Event, force?: boolean) => void;
    handleEndKey: (event: KeyboardEvent) => void;
    handleEnterKey: (event: KeyboardEvent) => void;
    handleSuggestionSelected: (event: Event, indexNumber: number) => Promise<void>;
    handleKeyDownDefault: (event: KeyboardEvent) => void;
    handleKeyUp: (event: KeyboardEvent) => void;
    handleUpKey(event: KeyboardEvent): void;
    handleDownKey: (event: KeyboardEvent) => void;
    setSuggestionFocus: (event: Event, index: number) => void;
    addSuggestionFocusedClassName: (suggestion: HTMLElement) => void;
    removeSuggestionFocusedClassName: (suggestions: HTMLCollection) => void;
    populateList: (show_all?: boolean) => Promise<void>;
    clearList: () => void;
    getListItem: (index: number, suggestion: Suggestion, length: number) => HTMLElement;
    getShowAllListItem: (index: number, length: number) => HTMLElement;
    private isPostcode;
}
